@page
@using PayrollPro.Companies
@using PayrollPro.Web.Pages.Companies
@model CreateCompanyModel
@{
    Layout = null; // Remove default layout to create custom full-screen experience
    ViewData["Title"] = "Create an account";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - PayrollPro</title>
    
    <!-- Bootstrap 5 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- SweetAlert2 -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <!-- Custom Styles -->
    <style>
        * {
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            margin: 0;
            padding: 0;
        }
        
        .creation-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .creation-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            max-width: 1200px;
            width: 100%;
            display: grid;
            grid-template-columns: 1fr 1fr;
            min-height: 600px;
        }
        
        .left-panel {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            padding: 60px 40px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            color: white;
            position: relative;
            overflow: hidden;
        }
        
        .left-panel::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 200%;
            height: 200%;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="2" fill="rgba(255,255,255,0.1)"/></svg>') repeat;
            animation: float 20s infinite linear;
        }
        
        @@keyframes float {
            0% { transform: translateY(0px) rotate(0deg); }
            100% { transform: translateY(-100px) rotate(360deg); }
        }
        
        .brand-section {
            position: relative;
            z-index: 2;
        }
        
        .brand-logo {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .brand-logo i {
            background: rgba(255, 255, 255, 0.2);
            padding: 15px;
            border-radius: 15px;
            backdrop-filter: blur(10px);
        }
        
        .welcome-text h1 {
            font-size: 2.8rem;
            font-weight: 700;
            margin-bottom: 20px;
            line-height: 1.2;
        }
        
        .welcome-text p {
            font-size: 1.2rem;
            opacity: 0.9;
            line-height: 1.6;
            margin-bottom: 30px;
        }
        
        .features-list {
            list-style: none;
            padding: 0;
        }
        
        .features-list li {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 15px;
            font-size: 1.1rem;
        }
        
        .features-list i {
            background: rgba(255, 255, 255, 0.2);
            width: 40px;
            height: 40px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .right-panel {
            padding: 60px 50px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }
        
        .step-indicator {
            display: flex;
            justify-content: center;
            margin-bottom: 40px;
        }
        
        .step {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #e9ecef;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 10px;
            font-weight: bold;
            color: #6c757d;
            position: relative;
        }
        
        .step.active {
            background: #4facfe;
            color: white;
        }
        
        .step.completed {
            background: #28a745;
            color: white;
        }
        
        .step:not(:last-child)::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 100%;
            width: 20px;
            height: 2px;
            background: #e9ecef;
            transform: translateY(-50%);
        }
        
        .step.completed:not(:last-child)::after {
            background: #28a745;
        }
        
        .form-section {
            margin-bottom: 30px;
        }
        
        .section-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 10px;
        }
        
        .section-subtitle {
            color: #718096;
            margin-bottom: 30px;
            font-size: 1.1rem;
        }
        
        .form-group {
            margin-bottom: 25px;
        }
        
        .form-label {
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 8px;
            display: block;
        }
        
        .form-control {
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            padding: 15px 20px;
            font-size: 1rem;
            transition: all 0.3s ease;
            width: 100%;
        }
        
        .form-control:focus {
            border-color: #4facfe;
            box-shadow: 0 0 0 3px rgba(79, 172, 254, 0.1);
            outline: none;
        }
        
        .form-control.is-valid {
            border-color: #28a745;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='m2.3 6.73.5.55 3.4-3.77-.5-.55z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }
        
        .form-control.is-valid:focus {
            border-color: #28a745;
            box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
        }
        
        .form-control.is-invalid {
            border-color: #dc3545;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath d='m5.8 4.6 2.4 2.4M8.2 4.6l-2.4 2.4'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }
        
        .form-control.is-invalid:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.1);
        }
        
        .swal-error-toast {
            border-left: 4px solid #dc3545 !important;
        }
        
        .swal-error-title {
            font-size: 1rem !important;
            font-weight: 600 !important;
        }
        
        .swal-wide {
            width: 600px !important;
        }
        
        .progress {
            height: 8px;
            background-color: #e9ecef;
            border-radius: 4px;
            overflow: hidden;
        }
        
        .progress-bar {
            background-color: #4facfe;
        }
        
        .form-section h5 {
            border-bottom: 2px solid #e9ecef;
            padding-bottom: 10px;
            margin-bottom: 20px;
        }
        
        .form-text {
            font-size: 0.875rem;
            margin-top: 5px;
        }
        
        .btn-next {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            border: none;
            color: white;
            padding: 15px 40px;
            border-radius: 10px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin-top: 20px;
        }
        
        .btn-next:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(79, 172, 254, 0.3);
        }
        
        .btn-back {
            background: transparent;
            border: 2px solid #e2e8f0;
            color: #718096;
            padding: 15px 40px;
            border-radius: 10px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin-top: 10px;
        }
        
        .btn-back:hover {
            border-color: #4facfe;
            color: #4facfe;
        }
        
        .step-content {
            display: none;
        }
        
        .step-content.active {
            display: block;
            animation: slideIn 0.5s ease;
        }
        
        @@keyframes slideIn {
            from { opacity: 0; transform: translateX(20px); }
            to { opacity: 1; transform: translateX(0); }
        }
        
        .progress-bar-custom {
            height: 6px;
            background: #e9ecef;
            border-radius: 3px;
            margin-bottom: 30px;
            overflow: hidden;
        }
        
        .progress-fill {
            height: 100%;
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            border-radius: 3px;
            transition: width 0.5s ease;
            width: 33%;
        }
        
        .invoice-preview {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 30px;
            margin-top: 20px;
            text-align: center;
        }
        
        .invoice-header {
            border-bottom: 2px solid #e9ecef;
            padding-bottom: 20px;
            margin-bottom: 20px;
        }
        
        .invoice-title {
            font-size: 2rem;
            font-weight: bold;
            color: #2d3748;
            margin-bottom: 10px;
        }
        
        .company-name-preview {
            font-size: 1.5rem;
            color: #4facfe;
            font-weight: 600;
        }
        
        @@media (max-width: 768px) {
            .creation-card {
                grid-template-columns: 1fr;
                margin: 10px;
            }
            
            .left-panel {
                padding: 40px 30px;
                text-align: center;
            }
            
            .right-panel {
                padding: 40px 30px;
            }
            
            .welcome-text h1 {
                font-size: 2.2rem;
            }
        }
    </style>
</head>
<body>
    <div class="creation-container">
        <div class="creation-card">
            <!-- Left Panel -->
            <div class="left-panel">
                <div class="brand-section">
                    <div class="brand-logo">
                        <i class="fas fa-building"></i>
                        PayrollPro
                    </div>
                    
                    <div class="welcome-text">
                        <h1>Create an account</h1>
                        <p>Set up your admin account and company profile to get started with professional payroll management.</p>
                    </div>
                    
                    <ul class="features-list">
                        <li>
                            <i class="fas fa-user-shield"></i>
                            <span>Secure admin account setup</span>
                        </li>
                        <li>
                            <i class="fas fa-users"></i>
                            <span>Manage employees efficiently</span>
                        </li>
                        <li>
                            <i class="fas fa-money-bill-wave"></i>
                            <span>Automated payroll processing</span>
                        </li>
                        <li>
                            <i class="fas fa-chart-bar"></i>
                            <span>Comprehensive reporting</span>
                        </li>
                        <li>
                            <i class="fas fa-shield-alt"></i>
                            <span>Secure & compliant</span>
                        </li>
                    </ul>
                </div>
            </div>
            
            <!-- Right Panel -->
            <div class="right-panel">
                <div class="step-indicator">
                    <div class="step active" data-step="1">1</div>
                    <div class="step" data-step="2">2</div>
                    <div class="step" data-step="3">3</div>
                </div>
                
                <div class="progress-bar-custom">
                    <div class="progress-fill" id="progressFill"></div>
                </div>
                
                <form id="companyForm" method="post">
                    @Html.AntiForgeryToken()
                    <!-- Step 1: User Account & Company Information -->
                    <div class="step-content active" data-step="1">
                        <div class="form-section">
                            <h2 class="section-title">Account Setup</h2>
                            <p class="section-subtitle">Create your admin account and enter your company details</p>
                            
                            <!-- User Account Section -->
                            <div class="row mb-4">
                                <div class="col-12">
                                    <h5 class="text-primary mb-3">
                                        <i class="fas fa-user-circle me-2"></i>Administrator Account
                                    </h5>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="UserRegistration.Username" class="form-label">Username *</label>
                                        <input asp-for="UserRegistration.Username" class="form-control" placeholder="Enter username" required>
                                        <small class="form-text text-muted">This will be your login username</small>
                                        <span asp-validation-for="UserRegistration.Username" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="UserRegistration.Email" class="form-label">Email Address *</label>
                                        <input asp-for="UserRegistration.Email" type="email" class="form-control" placeholder="admin@yourcompany.com" required>
                                        <small class="form-text text-muted">This will be your login email</small>
                                        <span asp-validation-for="UserRegistration.Email" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="UserRegistration.Password" class="form-label">Password *</label>
                                        <input asp-for="UserRegistration.Password" type="password" class="form-control" placeholder="Enter secure password" required minlength="6">
                                        <small class="form-text text-muted">Minimum 6 characters</small>
                                        <span asp-validation-for="UserRegistration.Password" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="UserRegistration.ConfirmPassword" class="form-label">Confirm Password *</label>
                                        <input asp-for="UserRegistration.ConfirmPassword" type="password" class="form-control" placeholder="Confirm password" required>
                                        <span asp-validation-for="UserRegistration.ConfirmPassword" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Company Information Section -->
                            <div class="row">
                                <div class="col-12">
                                    <h5 class="text-primary mb-3">
                                        <i class="fas fa-building me-2"></i>Company Information
                                    </h5>
                                </div>
                                <div class="col-12">
                                    <div class="form-group">
                                        <label asp-for="Company.Name" class="form-label">What's your company name? *</label>
                                        <input asp-for="Company.Name" class="form-control" placeholder="Enter your company name" required>
                                        <span asp-validation-for="Company.Name" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="form-group">
                                        <label asp-for="Company.Code" class="form-label">Company Code</label>
                                        <input asp-for="Company.Code" class="form-control" placeholder="Enter company code (optional)">
                                        <span asp-validation-for="Company.Code" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="form-group">
                                        <label asp-for="Company.Description" class="form-label">What does your company do?</label>
                                        <textarea asp-for="Company.Description" class="form-control" rows="2" placeholder="Brief description of your business"></textarea>
                                        <span asp-validation-for="Company.Description" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Company.EstablishedDate" class="form-label">When was your company established? *</label>
                                        <input asp-for="Company.EstablishedDate" type="date" class="form-control" required>
                                        <span asp-validation-for="Company.EstablishedDate" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <button type="button" class="btn-next" onclick="nextStep()">
                            Next Step <i class="fas fa-arrow-right ms-2"></i>
                        </button>
                    </div>
                    
                    <!-- Step 2: Detailed Contact & Location -->
                    <div class="step-content" data-step="2">
                        <div class="form-section">
                            <h2 class="section-title">Contact & Location Details</h2>
                            <p class="section-subtitle">Complete your company's contact information and business address</p>
                            
                            <div class="form-group">
                                <label asp-for="Company.Email" class="form-label">Business Email Address</label>
                                <input asp-for="Company.Email" type="email" class="form-control" placeholder="company@example.com">
                                <span asp-validation-for="Company.Email" class="text-danger"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="Company.Phone" class="form-label">Phone Number</label>
                                <input asp-for="Company.Phone" class="form-control" placeholder="+1 (555) 123-4567">
                                <span asp-validation-for="Company.Phone" class="text-danger"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="Company.Address" class="form-label">Business Address *</label>
                                <textarea asp-for="Company.Address" class="form-control" rows="2" placeholder="Enter your complete business address" required></textarea>
                                <span asp-validation-for="Company.Address" class="text-danger"></span>
                            </div>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Company.City" class="form-label">City</label>
                                        <input asp-for="Company.City" class="form-control" placeholder="Enter city">
                                        <span asp-validation-for="Company.City" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Company.State" class="form-label">State/Province</label>
                                        <input asp-for="Company.State" class="form-control" placeholder="Enter state or province">
                                        <span asp-validation-for="Company.State" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Company.ZipCode" class="form-label">ZIP/Postal Code</label>
                                        <input asp-for="Company.ZipCode" class="form-control" placeholder="Enter ZIP or postal code">
                                        <span asp-validation-for="Company.ZipCode" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Company.Country" class="form-label">Country</label>
                                        <input asp-for="Company.Country" class="form-control" placeholder="Enter country">
                                        <span asp-validation-for="Company.Country" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <button type="button" class="btn-next" onclick="nextStep()">
                            Next Step <i class="fas fa-arrow-right ms-2"></i>
                        </button>
                        <button type="button" class="btn-back" onclick="prevStep()">
                            <i class="fas fa-arrow-left me-2"></i> Previous
                        </button>
                    </div>
                    
                    <!-- Step 3: Legal & Final Details -->
                    <div class="step-content" data-step="3">
                        <div class="form-section">
                            <h2 class="section-title">Legal Information</h2>
                            <p class="section-subtitle">Legal details for compliance and reporting</p>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Company.TaxId" class="form-label">Tax ID / EIN</label>
                                        <input asp-for="Company.TaxId" class="form-control" placeholder="12-3456789">
                                        <span asp-validation-for="Company.TaxId" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Company.RegistrationNumber" class="form-label">Registration Number</label>
                                        <input asp-for="Company.RegistrationNumber" class="form-control" placeholder="REG123456">
                                        <span asp-validation-for="Company.RegistrationNumber" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="Company.Website" class="form-label">Company Website</label>
                                <input asp-for="Company.Website" type="url" class="form-control" placeholder="https://www.yourcompany.com">
                                <span asp-validation-for="Company.Website" class="text-danger"></span>
                            </div>
                            
                            <div class="form-group">
                                <label asp-for="Company.LogoUrl" class="form-label">Company Logo URL</label>
                                <input asp-for="Company.LogoUrl" type="text" class="form-control" placeholder="https://www.yourcompany.com/logo.png (optional)">
                                <span asp-validation-for="Company.LogoUrl" class="text-danger"></span>
                            </div>
                            
                            <div class="form-group">
                                <div class="form-check">
                                    <input asp-for="Company.IsActive" class="form-check-input" type="checkbox" checked>
                                    <label asp-for="Company.IsActive" class="form-check-label">
                                        Active company (ready to manage employees)
                                    </label>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Invoice Preview -->
                        <div class="invoice-preview">
                            <div class="invoice-header">
                                <div class="invoice-title">INVOICE</div>
                                <div class="company-name-preview" id="companyNamePreview">Your Company Name</div>
                            </div>
                            <p class="text-muted">Your company information will appear on all invoices and documents</p>
                        </div>
                        
                        <button type="submit" class="btn-next" id="createButton">
                            <i class="fas fa-check me-2"></i> Create Company
                        </button>
                        <button type="button" class="btn-back" onclick="prevStep()">
                            <i class="fas fa-arrow-left me-2"></i> Previous
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <!-- Success Modal -->
    <div class="modal fade" id="successModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body text-center p-5">
                    <div class="mb-4">
                        <i class="fas fa-check-circle text-success" style="font-size: 4rem;"></i>
                    </div>
                    <h3 class="mb-3">Company Created Successfully!</h3>
                    <p class="text-muted mb-4">Your company has been set up and saved to the database. You can now start managing employees and payroll.</p>
                    <button type="button" class="btn btn-success btn-lg" onclick="window.location.href='/Companies'">
                        <i class="fas fa-building me-2"></i> Go to Companies
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        let currentStep = 1;
        const totalSteps = 3;
        
        // Email validation constants (avoiding AT symbol issues with Razor)
        const AT_SYMBOL = String.fromCharCode(64); // AT symbol
        
        function updateProgress() {
            const progress = (currentStep / totalSteps) * 100;
            document.getElementById('progressFill').style.width = progress + '%';
            
            // Update step indicators
            document.querySelectorAll('.step').forEach((step, index) => {
                const stepNumber = index + 1;
                step.classList.remove('active', 'completed');
                
                if (stepNumber < currentStep) {
                    step.classList.add('completed');
                } else if (stepNumber === currentStep) {
                    step.classList.add('active');
                }
            });
        }
        
        function showStep(step) {
            document.querySelectorAll('.step-content').forEach(content => {
                content.classList.remove('active');
            });
            
            document.querySelector('.step-content[data-step="' + step + '"]').classList.add('active');
            updateProgress();
        }
        
        function nextStep() {
            console.log('nextStep called, current step:', currentStep);
            
            if (currentStep === 1) {
                // Validate first step (user account + basic company info)
                if (!validateStep1()) {
                    console.log('Step 1 validation failed');
                    return;
                }
                console.log('Step 1 validation passed');
            } else if (currentStep === 2) {
                // Validate second step (contact & location)
                if (!validateStep2()) {
                    console.log('Step 2 validation failed');
                    return;
                }
                console.log('Step 2 validation passed');
            }
            
            if (currentStep < totalSteps) {
                currentStep++;
                showStep(currentStep);
                console.log('Moving to step:', currentStep);
            }
        }
        
        function validateStep2() {
            let isValid = true;
            let firstError = null;
            
            // Clear previous styling
            document.querySelectorAll('[data-step="2"] .form-control').forEach(el => {
                el.classList.remove('is-invalid', 'is-valid');
            });
            
            // Validate business address (required)
            const addressInput = document.querySelector('input[name="Company.Address"], textarea[name="Company.Address"]');
            const address = addressInput.value.trim();
            if (!address) {
                addressInput.classList.add('is-invalid');
                if (!firstError) firstError = addressInput;
                showValidationError('Business Address Required', 'Please enter your complete business address for legal documentation', 'map-marker-alt');
                isValid = false;
            } else if (address.length < 10) {
                addressInput.classList.add('is-invalid');
                if (!firstError) firstError = addressInput;
                showValidationError('Address Too Short', 'Please provide a complete business address with street, city, and postal code', 'map-marker-alt');
                isValid = false;
            } else {
                addressInput.classList.add('is-valid');
            }
            
            // Validate email (optional but if provided, must be valid)
            const businessEmailInput = document.querySelector('input[name="Company.Email"]');
            const businessEmail = businessEmailInput.value.trim();
            if (businessEmail) {
                // Simple email validation without regex
                if (!businessEmail.includes(AT_SYMBOL) || !businessEmail.includes(".") || businessEmail.length < 5) {
                    businessEmailInput.classList.add('is-invalid');
                    if (!firstError) firstError = businessEmailInput;
                    showValidationError('Invalid Business Email', 'Please enter a valid email address for your business', 'envelope');
                    isValid = false;
                } else {
                    businessEmailInput.classList.add('is-valid');
                }
            }
            
            // Validate phone (optional but if provided, basic format check)
            const phoneInput = document.querySelector('input[name="Company.Phone"]');
            const phone = phoneInput.value.trim();
            if (phone) {
                // Basic phone validation - should contain numbers and be reasonable length
                if (phone.length < 10) {
                    phoneInput.classList.add('is-invalid');
                    if (!firstError) firstError = phoneInput;
                    showValidationError('Invalid Phone Format', 'Please enter a valid phone number (e.g., +1 (555) 123-4567)', 'phone');
                    isValid = false;
                } else {
                    phoneInput.classList.add('is-valid');
                }
            }
            
            // Focus on first error if validation failed
            if (!isValid && firstError) {
                firstError.focus();
            } else if (isValid) {
                // Show success message when all fields are valid
                Swal.fire({
                    icon: 'success',
                    title: 'Step 2 Complete!',
                    text: 'Contact and location information is valid. Ready for final step.',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000,
                    background: '#d4edda',
                    color: '#155724'
                });
            }
            
            return isValid;
        }
        
        function validateStep1() {
            console.log('validateStep1 called');
            let isValid = true;
            let firstError = null;
            
            // Clear previous errors and styling
            document.querySelectorAll('.text-danger').forEach(el => el.textContent = '');
            document.querySelectorAll('.form-control').forEach(el => {
                el.classList.remove('is-invalid', 'is-valid');
            });
            
            // Validate username
            const usernameInput = document.querySelector('input[name="UserRegistration.Username"]');
            const username = usernameInput ? usernameInput.value.trim() : '';
            console.log('Username:', username);
            if (!username) {
                if (usernameInput) usernameInput.classList.add('is-invalid');
                if (!firstError) firstError = usernameInput;
                showValidationError('Username Required', 'Please enter a username for your administrator account', 'user');
                isValid = false;
            } else if (username.length < 3) {
                if (usernameInput) usernameInput.classList.add('is-invalid');
                if (!firstError) firstError = usernameInput;
                showValidationError('Username Too Short', 'Username must be at least 3 characters long for security', 'user');
                isValid = false;
            } else {
                if (usernameInput) usernameInput.classList.add('is-valid');
            }
            
            // Validate email
            const emailInput = document.querySelector('input[name="UserRegistration.Email"]');
            const email = emailInput ? emailInput.value.trim() : '';
            console.log('Email:', email);
            if (!email) {
                if (emailInput) emailInput.classList.add('is-invalid');
                if (!firstError) firstError = emailInput;
                showValidationError('Email Required', 'Please enter your email address for account verification', 'envelope');
                isValid = false;
            } else if (!email.includes(AT_SYMBOL) || !email.includes(".") || email.length < 5) {
                if (emailInput) emailInput.classList.add('is-invalid');
                if (!firstError) firstError = emailInput;
                showValidationError('Invalid Email Format', 'Please enter a valid email address (e.g., admin' + AT_SYMBOL + 'company.com)', 'envelope');
                isValid = false;
            } else {
                if (emailInput) emailInput.classList.add('is-valid');
            }
            
            // Validate password
            const passwordInput = document.querySelector('input[name="UserRegistration.Password"]');
            const password = passwordInput ? passwordInput.value : '';
            console.log('Password length:', password.length);
            if (!password) {
                if (passwordInput) passwordInput.classList.add('is-invalid');
                if (!firstError) firstError = passwordInput;
                showValidationError('Password Required', 'Please create a secure password for your account', 'lock');
                isValid = false;
            } else if (password.length < 6) {
                if (passwordInput) passwordInput.classList.add('is-invalid');
                if (!firstError) firstError = passwordInput;
                showValidationError('Password Too Short', 'Password must be at least 6 characters for security. Consider adding numbers and symbols.', 'lock');
                isValid = false;
            } else {
                if (passwordInput) passwordInput.classList.add('is-valid');
            }
            
            // Validate confirm password
            const confirmPasswordInput = document.querySelector('input[name="UserRegistration.ConfirmPassword"]');
            const confirmPassword = confirmPasswordInput ? confirmPasswordInput.value : '';
            if (!confirmPassword) {
                if (confirmPasswordInput) confirmPasswordInput.classList.add('is-invalid');
                if (!firstError) firstError = confirmPasswordInput;
                showValidationError('Confirm Password Required', 'Please confirm your password to ensure accuracy', 'lock');
                isValid = false;
            } else if (password !== confirmPassword) {
                if (confirmPasswordInput) confirmPasswordInput.classList.add('is-invalid');
                if (!firstError) firstError = confirmPasswordInput;
                showValidationError('Password Mismatch', 'The passwords you entered do not match. Please try again.', 'exclamation-triangle');
                isValid = false;
            } else if (password) {
                if (confirmPasswordInput) confirmPasswordInput.classList.add('is-valid');
            }
            
            // Validate company name
            const companyNameInput = document.querySelector('input[name="Company.Name"]');
            const companyName = companyNameInput ? companyNameInput.value.trim() : '';
            console.log('Company name:', companyName);
            if (!companyName) {
                if (companyNameInput) companyNameInput.classList.add('is-invalid');
                if (!firstError) firstError = companyNameInput;
                showValidationError('Company Name Required', 'Please enter your company name as it will appear on official documents', 'building');
                isValid = false;
            } else if (companyName.length < 2) {
                if (companyNameInput) companyNameInput.classList.add('is-invalid');
                if (!firstError) firstError = companyNameInput;
                showValidationError('Company Name Too Short', 'Company name must be at least 2 characters long', 'building');
                isValid = false;
            } else {
                if (companyNameInput) companyNameInput.classList.add('is-valid');
            }
            
            // Make established date optional for now
            const establishedDateInput = document.querySelector('input[name="Company.EstablishedDate"]');
            const establishedDate = establishedDateInput ? establishedDateInput.value : '';
            if (establishedDate) {
                const selectedDate = new Date(establishedDate);
                const today = new Date();
                const hundredYearsAgo = new Date(today.getFullYear() - 100, today.getMonth(), today.getDate());
                
                if (selectedDate > today) {
                    if (establishedDateInput) establishedDateInput.classList.add('is-invalid');
                    if (!firstError) firstError = establishedDateInput;
                    showValidationError('Invalid Date', 'Company establishment date cannot be in the future', 'calendar-alt');
                    isValid = false;
                } else if (selectedDate < hundredYearsAgo) {
                    if (establishedDateInput) establishedDateInput.classList.add('is-invalid');
                    if (!firstError) firstError = establishedDateInput;
                    showValidationError('Invalid Date', 'Please enter a valid establishment date within the last 100 years', 'calendar-alt');
                    isValid = false;
                } else {
                    if (establishedDateInput) establishedDateInput.classList.add('is-valid');
                }
            }
            
            console.log('Step 1 validation result:', isValid);
            
            // Focus on first error if validation failed
            if (!isValid && firstError) {
                firstError.focus();
            } else if (isValid) {
                // Show success message when all fields are valid
                Swal.fire({
                    icon: 'success',
                    title: 'Step 1 Complete!',
                    text: 'All account and company information is valid. Ready to proceed.',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000,
                    background: '#d4edda',
                    color: '#155724'
                });
            }
            
            return isValid;
        }
        
        function showValidationError(title, message, iconType = 'exclamation-triangle') {
            Swal.fire({
                icon: 'error',
                title: '<i class="fas fa-' + iconType + ' me-2"></i>' + title,
                html: '<div class="text-start">' +
                    '<p class="mb-2">' + message + '</p>' +
                    '<small class="text-muted">' +
                        '<i class="fas fa-lightbulb me-1"></i>' +
                        'Please correct this field and try again.' +
                    '</small>' +
                '</div>',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 4000,
                timerProgressBar: true,
                background: '#f8d7da',
                color: '#721c24',
                customClass: {
                    popup: 'swal-error-toast',
                    title: 'swal-error-title'
                }
            });
        }
        
        function prevStep() {
            if (currentStep > 1) {
                currentStep--;
                showStep(currentStep);
            }
        }
        
        // Update company name preview in real-time
        document.querySelector('input[name="Company.Name"]').addEventListener('input', function(e) {
            const preview = document.getElementById('companyNamePreview');
            preview.textContent = e.target.value || 'Your Company Name';
        });
        
        // Add real-time validation feedback
        function setupRealTimeValidation() {
            // Username validation
            const usernameInput = document.querySelector('input[name="UserRegistration.Username"]');
            usernameInput.addEventListener('blur', function() {
                const username = this.value.trim();
                this.classList.remove('is-invalid', 'is-valid');
                
                if (username && username.length >= 3) {
                    this.classList.add('is-valid');
                }
            });
            
            // Email validation
            const emailInput = document.querySelector('input[name="UserRegistration.Email"]');
            emailInput.addEventListener('blur', function() {
                const email = this.value.trim();
                this.classList.remove('is-invalid', 'is-valid');
                
                if (email && email.includes(AT_SYMBOL) && email.includes(".") && email.length >= 5) {
                    this.classList.add('is-valid');
                }
            });
            
            // Password validation
            const passwordInput = document.querySelector('input[name="UserRegistration.Password"]');
            passwordInput.addEventListener('input', function() {
                const password = this.value;
                this.classList.remove('is-invalid', 'is-valid');
                
                if (password.length >= 6) {
                    this.classList.add('is-valid');
                    
                    // Also validate confirm password if it has a value
                    const confirmPasswordInput = document.querySelector('input[name="UserRegistration.ConfirmPassword"]');
                    if (confirmPasswordInput.value && confirmPasswordInput.value === password) {
                        confirmPasswordInput.classList.remove('is-invalid');
                        confirmPasswordInput.classList.add('is-valid');
                    }
                }
            });
            
            // Confirm password validation
            const confirmPasswordInput = document.querySelector('input[name="UserRegistration.ConfirmPassword"]');
            confirmPasswordInput.addEventListener('input', function() {
                const password = document.querySelector('input[name="UserRegistration.Password"]').value;
                this.classList.remove('is-invalid', 'is-valid');
                
                if (this.value && this.value === password) {
                    this.classList.add('is-valid');
                }
            });
            
            // Company name validation
            const companyNameInput = document.querySelector('input[name="Company.Name"]');
            companyNameInput.addEventListener('blur', function() {
                const companyName = this.value.trim();
                this.classList.remove('is-invalid', 'is-valid');
                
                if (companyName && companyName.length >= 2) {
                    this.classList.add('is-valid');
                }
            });
            
            // Business email validation (Step 2)
            const businessEmailInput = document.querySelector('input[name="Company.Email"]');
            if (businessEmailInput) {
                businessEmailInput.addEventListener('blur', function() {
                    const email = this.value.trim();
                    this.classList.remove('is-invalid', 'is-valid');
                    
                    if (email) {
                        if (email.includes(AT_SYMBOL) && email.includes(".") && email.length >= 5) {
                            this.classList.add('is-valid');
                        } else {
                            this.classList.add('is-invalid');
                        }
                    }
                });
            }
            
            // Show helpful hints on focus
            document.querySelectorAll('.form-control').forEach(input => {
                input.addEventListener('focus', function() {
                    const fieldName = this.getAttribute('name');
                    let hint = '';
                    
                    switch(fieldName) {
                        case 'UserRegistration.Username':
                            hint = 'Username should be unique and contain only letters, numbers, and underscores';
                            break;
                        case 'UserRegistration.Email':
                            hint = 'This email will be used for login and important notifications';
                            break;
                        case 'UserRegistration.Password':
                            hint = 'Create a strong password with at least 6 characters';
                            break;
                        case 'Company.Name':
                            hint = 'Enter your company name as it appears on official documents';
                            break;
                        case 'Company.Email':
                            hint = 'Business email for customer communication and invoices';
                            break;
                        case 'Company.Phone':
                            hint = 'Include country code for international accessibility';
                            break;
                    }
                    
                    if (hint) {
                        Swal.fire({
                            icon: 'info',
                            title: 'Field Information',
                            text: hint,
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            background: '#d1ecf1',
                            color: '#0c5460'
                        });
                    }
                });
            });
        }
        
        // Form submission
        document.getElementById('companyForm').addEventListener('submit', function(e) {
            console.log('Form submit event triggered!');
            e.preventDefault();
            
            // Skip validation for now - let's test basic submission
            console.log('Skipping validation for debugging...');
            
            // Simple alert to confirm we reach this point
            alert('Form submission started!');
            
            const formData = new FormData(this);
            const createButton = document.getElementById('createButton');
            
            // Show loading state with progress
            let progress = 0;
            createButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i> Creating Company...';
            createButton.disabled = true;
            
            // Show progress notification
            Swal.fire({
                title: 'Creating Your Company...',
                html: 
                    '<div class="text-center">' +
                        '<div class="spinner-border text-primary mb-3" role="status">' +
                            '<span class="visually-hidden">Loading...</span>' +
                        '</div>' +
                        '<p class="mb-2">Setting up your account and company profile</p>' +
                        '<div class="progress">' +
                            '<div class="progress-bar progress-bar-striped progress-bar-animated" ' +
                                 'role="progressbar" style="width: 0%" id="submitProgress"></div>' +
                        '</div>' +
                    '</div>',
                allowOutsideClick: false,
                showConfirmButton: false,
                background: '#f8f9fa'
            });
            
            // Simulate progress
            const progressInterval = setInterval(() => {
                progress += 10;
                const progressBar = document.getElementById('submitProgress');
                if (progressBar) {
                    progressBar.style.width = progress + '%';
                }
                if (progress >= 90) {
                    clearInterval(progressInterval);
                }
            }, 200);
            
            // Debug: Log form data
            console.log('Form data entries:');
            for (let [key, value] of formData.entries()) {
                console.log(key, value);
            }
            
            fetch(window.location.pathname, {
                method: 'POST',
                body: formData
            })
            .then(response => {
                console.log('Response status:', response.status);
                console.log('Response headers:', response.headers);
                return response.json();
            })
            .then(data => {
                console.log('Server response:', data);
                clearInterval(progressInterval);
                
                if (data.success) {
                    // Show success notification
                    Swal.fire({
                        icon: 'success',
                        title: 'Company Created Successfully!',
                        html: 
                            '<div class="text-center">' +
                                '<div class="mb-3">' +
                                    '<i class="fas fa-check-circle text-success" style="font-size: 3rem;"></i>' +
                                '</div>' +
                                '<p class="mb-3">Your company and user account have been created successfully!</p>' +
                                '<div class="alert alert-info text-start">' +
                                    '<h6 class="alert-heading">' +
                                        '<i class="fas fa-key me-2"></i>Your Login Credentials' +
                                    '</h6>' +
                                    '<p class="mb-1"><strong>Username:</strong> ' + (data.username || 'N/A') + '</p>' +
                                    '<p class="mb-0"><strong>Email:</strong> ' + (data.email || 'N/A') + '</p>' +
                                    '<small class="text-muted">Use these credentials to login in the next step.</small>' +
                                '</div>' +
                                '<div class="alert alert-success text-start">' +
                                    '<h6 class="alert-heading">' +
                                        '<i class="fas fa-info-circle me-2"></i>What\'s Next?' +
                                    '</h6>' +
                                    '<ul class="mb-0">' +
                                        '<li>Login with your credentials</li>' +
                                        '<li>Access your company dashboard</li>' +
                                        '<li>Add employees to your system</li>' +
                                        '<li>Set up payroll schedules</li>' +
                                    '</ul>' +
                                '</div>' +
                            '</div>',
                        showConfirmButton: true,
                        confirmButtonText: 'Go to Login Page',
                        confirmButtonColor: '#28a745',
                        allowOutsideClick: false,
                        customClass: {
                            popup: 'swal-wide'
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Use the redirect URL from the server response, or default to home
                            window.location.href = data.redirectUrl || '/';
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Creation Failed',
                        html: 
                            '<div class="text-start">' +
                                '<p class="mb-2">We encountered an error while creating your company:</p>' +
                                '<div class="alert alert-danger">' +
                                    '<strong>Error:</strong> ' + (data.error || 'Unknown error occurred') +
                                '</div>' +
                                '<p class="mb-0">' +
                                    '<small class="text-muted">' +
                                        '<i class="fas fa-lightbulb me-1"></i>' +
                                        'Please check your information and try again. If the problem persists, contact support.' +
                                    '</small>' +
                                '</p>' +
                            '</div>',
                        confirmButtonText: 'Try Again',
                        confirmButtonColor: '#dc3545'
                    });
                    createButton.innerHTML = '<i class="fas fa-check me-2"></i> Create Company';
                    createButton.disabled = false;
                }
            })
            .catch(error => {
                clearInterval(progressInterval);
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Connection Error',
                    html: 
                        '<div class="text-start">' +
                            '<p class="mb-2">Unable to connect to the server. Please check your internet connection and try again.</p>' +
                            '<div class="alert alert-warning">' +
                                '<h6 class="alert-heading">' +
                                    '<i class="fas fa-exclamation-triangle me-2"></i>Troubleshooting Tips:' +
                                '</h6>' +
                                '<ul class="mb-0">' +
                                    '<li>Check your internet connection</li>' +
                                    '<li>Refresh the page and try again</li>' +
                                    '<li>Clear your browser cache</li>' +
                                    '<li>Contact support if the issue persists</li>' +
                                '</ul>' +
                            '</div>' +
                        '</div>',
                    confirmButtonText: 'Try Again',
                    confirmButtonColor: '#ffc107'
                });
                createButton.innerHTML = '<i class="fas fa-check me-2"></i> Create Company';
                createButton.disabled = false;
            });
        });
        
        // Initialize
        updateProgress();
        setupRealTimeValidation();
        
        // Add direct click handler to submit button as backup
        document.getElementById('createButton').addEventListener('click', function(e) {
            console.log('Submit button clicked directly!');
            alert('Submit button was clicked!');
            
            // Check if this is inside a form
            const form = this.closest('form');
            console.log('Button is inside form:', form ? 'YES' : 'NO');
            
            if (form) {
                console.log('Form ID:', form.id);
                // Trigger form submit manually if needed
                form.dispatchEvent(new Event('submit'));
            }
        });
    </script>
</body>
</html>