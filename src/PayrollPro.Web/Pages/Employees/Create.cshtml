@page
@using PayrollPro.Employees
@using PayrollPro.Web.Pages.Employees
@model PayrollPro.Web.Pages.Employees.CreateModel
@{
    ViewData["Title"] = "Add New Employee";
}

@section styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="~/css/employee-create-modern.css">
}

<div class="employee-profile-container">
    <div class="profile-card">
        <div class="profile-header">
            <button type="button" class="back-button" onclick="window.history.back()">
                <i class="fas fa-arrow-left"></i> Back
            </button>
            <h1><i class="fas fa-user-plus me-2"></i>Create New Employee</h1>
            <p class="subtitle">Add a new team member to your organization</p>
        </div>
        
        <div class="profile-content">
            <div class="profile-sidebar">
                <div class="profile-avatar">
                    <i class="fas fa-user"></i>
                </div>
                <div class="profile-info">
                    <h3 id="preview-name">New Employee</h3>
                    <p class="role" id="preview-position">Position</p>
                    <span class="status-badge">
                        <i class="fas fa-circle me-1"></i>Creating Profile
                    </span>
                </div>
                
                <div class="profile-stats">
                    <div class="stat-item">
                        <span class="stat-label">Employee Code</span>
                        <span class="stat-value" id="preview-code">Auto-generated</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">Department</span>
                        <span class="stat-value" id="preview-department">Not specified</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">Manager</span>
                        <span class="stat-value" id="preview-manager">Not assigned</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">Hire Date</span>
                        <span class="stat-value" id="preview-hire-date">Today</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">Billing Rate</span>
                        <span class="stat-value" id="preview-billing">Not set</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-label">Status</span>
                        <span class="stat-value">Active</span>
                    </div>
                </div>
            </div>
            
            <div class="profile-main">
                <!-- Message Display Area -->
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Please fix the following errors:</strong>
                        <ul class="mb-0 mt-2">
                            @foreach (var modelError in ViewData.ModelState.Where(x => x.Value?.Errors?.Count > 0))
                            {
                                @foreach (var error in modelError.Value!.Errors)
                                {
                                    <li>@(string.IsNullOrEmpty(error.ErrorMessage) ? error.Exception?.Message : error.ErrorMessage)</li>
                                }
                            }
                        </ul>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }
                
                <form id="employeeForm" method="post" asp-antiforgery="true">
                    <input type="hidden" asp-for="Employee.CompanyId" />
                    
                    <div class="tab-navigation">
                        <button type="button" class="tab-button active" data-tab="personal">
                            <i class="fas fa-user me-2"></i>Personal Info
                        </button>
                        <button type="button" class="tab-button" data-tab="employment">
                            <i class="fas fa-briefcase me-2"></i>Employment
                        </button>
                        <button type="button" class="tab-button" data-tab="contact">
                            <i class="fas fa-envelope me-2"></i>Contact
                        </button>
                    </div>
                    
                    <!-- Personal Information Tab -->
                    <div class="tab-content active" id="personal-tab">
                        <div class="form-section">
                            <h4><i class="fas fa-id-card"></i>Basic Information</h4>
                            <div class="form-grid">
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.FirstName" placeholder=" " required />
                                    <label class="form-label">* First Name</label>
                                    <span asp-validation-for="Employee.FirstName" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.LastName" placeholder=" " required />
                                    <label class="form-label">* Last Name</label>
                                    <span asp-validation-for="Employee.LastName" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.DisplayName" placeholder=" " />
                                    <label class="form-label">Display Name As</label>
                                    <span asp-validation-for="Employee.DisplayName" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="email" class="form-control" asp-for="Employee.Email" placeholder=" " required />
                                    <label class="form-label">* Email</label>
                                    <span asp-validation-for="Employee.Email" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.Phone" placeholder=" " />
                                    <label class="form-label">Phone</label>
                                    <span asp-validation-for="Employee.Phone" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.MobilePhone" placeholder=" " />
                                    <label class="form-label">Mobile</label>
                                    <span asp-validation-for="Employee.MobilePhone" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.SocialSecurityNumber" placeholder=" " />
                                    <label class="form-label">Social Security No.</label>
                                    <span asp-validation-for="Employee.SocialSecurityNumber" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <div class="select-wrapper">
                                        <select class="form-select" asp-for="Employee.Gender">
                                            <option value="">Select Gender</option>
                                            <option value="Male">Male</option>
                                            <option value="Female">Female</option>
                                            <option value="Other">Other</option>
                                            <option value="Prefer not to say">Prefer not to say</option>
                                        </select>
                                    </div>
                                    <span asp-validation-for="Employee.Gender" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="date" class="form-control" asp-for="Employee.DateOfBirth" placeholder=" " />
                                    <label class="form-label">Date of Birth</label>
                                    <span asp-validation-for="Employee.DateOfBirth" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Employment Information Tab -->
                    <div class="tab-content" id="employment-tab">
                        <div class="form-section">
                            <h4><i class="fas fa-building"></i>Employment Details</h4>
                            <div class="form-grid">
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.EmployeeId" placeholder=" " required />
                                    <label class="form-label">* Employee ID</label>
                                    <span asp-validation-for="Employee.EmployeeId" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.Position" placeholder=" " required />
                                    <label class="form-label">* Position</label>
                                    <span asp-validation-for="Employee.Position" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.Department" placeholder=" " required />
                                    <label class="form-label">* Department</label>
                                    <span asp-validation-for="Employee.Department" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.Manager" placeholder=" " />
                                    <label class="form-label">Manager</label>
                                    <span asp-validation-for="Employee.Manager" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="date" class="form-control" asp-for="Employee.HireDate" required />
                                    <label class="form-label">* Hire Date</label>
                                    <span asp-validation-for="Employee.HireDate" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="date" class="form-control" asp-for="Employee.ReleaseDate" />
                                    <label class="form-label">Release Date</label>
                                    <span asp-validation-for="Employee.ReleaseDate" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <div class="select-wrapper">
                                        <select class="form-select" asp-for="Employee.Status" required>
                                            <option value="">Select Status</option>
                                            <option value="1">Active</option>
                                            <option value="2">Inactive</option>
                                            <option value="4">Terminated</option>
                                            <option value="5">On Leave</option>
                                        </select>
                                    </div>
                                    <span asp-validation-for="Employee.Status" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-section">
                            <h4><i class="fas fa-dollar-sign"></i>Compensation & Billing</h4>
                            <div class="form-grid">
                                <div class="form-group">
                                    <div class="input-group">
                                        <input type="number" class="form-control" asp-for="Employee.Salary" placeholder="0.00" step="0.01" required />
                                        <span class="input-group-text">USD/year</span>
                                    </div>
                                    <span asp-validation-for="Employee.Salary" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <div class="input-group">
                                        <input type="number" class="form-control" asp-for="Employee.BillingRate" placeholder="0.00" step="0.01" />
                                        <span class="input-group-text">USD/hr</span>
                                    </div>
                                    <span asp-validation-for="Employee.BillingRate" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <div class="form-check-wrapper">
                                        <input type="checkbox" class="form-check-input" asp-for="Employee.BillableByDefault" id="billableCheck" />
                                        <label class="form-check-label" for="billableCheck">Billable by Default</label>
                                    </div>
                                    <span asp-validation-for="Employee.BillableByDefault" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Contact Information Tab -->
                    <div class="tab-content" id="contact-tab">
                        <div class="form-section">
                            <h4><i class="fas fa-map-marker-alt"></i>Address Information</h4>
                            <div class="form-grid">
                                <div class="form-group form-grid-full">
                                    <input type="text" class="form-control" asp-for="Employee.Address" placeholder=" " />
                                    <label class="form-label">Street Address</label>
                                    <span asp-validation-for="Employee.Address" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.City" placeholder=" " />
                                    <label class="form-label">City</label>
                                    <span asp-validation-for="Employee.City" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.State" placeholder=" " />
                                    <label class="form-label">State/Province</label>
                                    <span asp-validation-for="Employee.State" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.ZipCode" placeholder=" " />
                                    <label class="form-label">ZIP/Postal Code</label>
                                    <span asp-validation-for="Employee.ZipCode" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.Country" placeholder=" " />
                                    <label class="form-label">Country</label>
                                    <span asp-validation-for="Employee.Country" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-section">
                            <h4><i class="fas fa-phone"></i>Emergency Contact</h4>
                            <div class="form-grid">
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.EmergencyContactName" placeholder=" " />
                                    <label class="form-label">Emergency Contact Name</label>
                                    <span asp-validation-for="Employee.EmergencyContactName" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-control" asp-for="Employee.EmergencyContactPhone" placeholder=" " />
                                    <label class="form-label">Emergency Contact Phone</label>
                                    <span asp-validation-for="Employee.EmergencyContactPhone" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-section">
                            <h4><i class="fas fa-sticky-note"></i>Additional Information</h4>
                            <div class="form-grid">
                                <div class="form-group form-grid-full">
                                    <textarea class="form-control" asp-for="Employee.Notes" placeholder=" " rows="4"></textarea>
                                    <label class="form-label">Notes</label>
                                    <span asp-validation-for="Employee.Notes" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="btn-group">
                        <button type="button" class="btn btn-secondary" onclick="window.history.back()">
                            <i class="fas fa-times"></i> Cancel
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Create Employee
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/libs/jquery/dist/jquery.min.js"></script>
    <script src="~/libs/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/libs/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/canadian-employee-validation.js"></script>
    <script>
        // Handle TempData messages on page load
        $(document).ready(function() {
            // Handle Success Messages
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                Swal.fire({
                    icon: 'success',
                    title: '@Html.Raw(TempData["SuccessTitle"] ?? "Success")',
                    text: '@Html.Raw(TempData["SuccessMessage"])',
                    confirmButtonColor: '#28a745',
                    timer: 5000,
                    timerProgressBar: true
                });
                </text>
            }
            
            // Handle Error Messages
            @if (TempData["ErrorMessage"] != null)
            {
                <text>
                Swal.fire({
                    icon: 'error',
                    title: '@Html.Raw(TempData["ErrorTitle"] ?? "Error")',
                    text: '@Html.Raw(TempData["ErrorMessage"])',
                    confirmButtonColor: '#dc3545',
                    @if (TempData["ErrorDetails"] != null)
                    {
                        <text>
                        footer: '<small class="text-muted">Details: @Html.Raw(TempData["ErrorDetails"])</small>'
                        </text>
                    }
                });
                </text>
            }
        });
    </script>
    <script>
        document.querySelectorAll('.tab-button').forEach(button => {
            button.addEventListener('click', function() {
                const targetTab = this.getAttribute('data-tab');
                document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
                document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
                this.classList.add('active');
                document.getElementById(targetTab + '-tab').classList.add('active');
            });
        });
        
        function updatePreview() {
            const firstName = document.querySelector('[name="Employee.FirstName"]').value || 'New';
            const lastName = document.querySelector('[name="Employee.LastName"]').value || 'Employee';
            const displayName = document.querySelector('[name="Employee.DisplayName"]').value;
            const position = document.querySelector('[name="Employee.Position"]').value || 'Position';
            const department = document.querySelector('[name="Employee.Department"]').value || 'Not specified';
            const employeeId = document.querySelector('[name="Employee.EmployeeId"]').value || 'Auto-generated';
            const hireDate = document.querySelector('[name="Employee.HireDate"]').value || 'Today';
            const manager = document.querySelector('[name="Employee.Manager"]').value || 'Not assigned';
            const billingRate = document.querySelector('[name="Employee.BillingRate"]').value;
            
            // Update preview with display name preference
            const nameToShow = displayName && displayName.trim() ? displayName : `${firstName} ${lastName}`;
            document.getElementById('preview-name').textContent = nameToShow;
            document.getElementById('preview-position').textContent = position;
            document.getElementById('preview-department').textContent = department;
            document.getElementById('preview-code').textContent = employeeId;
            document.getElementById('preview-hire-date').textContent = hireDate ? new Date(hireDate).toLocaleDateString() : 'Today';
            
            // Add manager info to preview if available
            const managerStat = document.querySelector('#preview-manager');
            if (managerStat) {
                managerStat.textContent = manager;
            }
            
            // Add billing rate if available
            const billingStat = document.querySelector('#preview-billing');
            if (billingStat && billingRate) {
                billingStat.textContent = `$${billingRate}/hr`;
            }
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize form inputs
            const inputs = document.querySelectorAll('input, select');
            inputs.forEach(input => {
                input.addEventListener('input', updatePreview);
                input.addEventListener('change', updatePreview);
            });
            
            // Initialize date inputs with proper formatting and validation
            const dateInputs = document.querySelectorAll('input[type="date"]');
            dateInputs.forEach(input => {
                // Enhanced date input handling
                function updateDateFieldState(field) {
                    if (field.value && field.value.length > 0) {
                        field.classList.add('has-value');
                        // Ensure the date is properly formatted
                        try {
                            const date = new Date(field.value + 'T00:00:00');
                            if (!isNaN(date.getTime())) {
                                field.classList.remove('invalid-date');
                            } else {
                                field.classList.add('invalid-date');
                            }
                        } catch (e) {
                            field.classList.add('invalid-date');
                        }
                    } else {
                        field.classList.remove('has-value');
                        field.classList.remove('invalid-date');
                    }
                }
                
                // Set default date for hire date (today) - but only if empty
                if (!input.value && input.name === 'Employee.HireDate') {
                    const today = new Date();
                    const year = today.getFullYear();
                    const month = String(today.getMonth() + 1).padStart(2, '0');
                    const day = String(today.getDate()).padStart(2, '0');
                    input.value = `${year}-${month}-${day}`;
                }
                
                // Event handlers for better date handling
                input.addEventListener('focus', function() {
                    this.style.borderColor = '#007bff';
                    this.classList.add('has-value');
                });
                
                input.addEventListener('blur', function() {
                    this.style.borderColor = '';
                    updateDateFieldState(this);
                });
                
                input.addEventListener('change', function() {
                    updateDateFieldState(this);
                });
                
                input.addEventListener('input', function() {
                    updateDateFieldState(this);
                });
                
                // Initialize field state
                updateDateFieldState(input);
            });
            
            // Update preview initially
            updatePreview();
        });

        // Enhanced form submission with Canadian validation and better feedback
        document.getElementById('employeeForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const form = this; // Capture form reference for setTimeout
            
            // First run basic HTML5 validation
            if (!form.checkValidity()) {
                e.stopPropagation();
                
                // Collect specific validation errors
                const requiredFields = form.querySelectorAll(':invalid');
                let errorMessages = [];
                
                requiredFields.forEach(field => {
                    const label = form.querySelector(`label[for="${field.id}"], label[asp-for="${field.name}"]`);
                    const fieldName = label ? label.textContent.replace('*', '').trim() : field.name || 'Unknown field';
                    
                    if (field.validity.valueMissing) {
                        errorMessages.push(`${fieldName} is required`);
                    } else if (field.validity.typeMismatch) {
                        errorMessages.push(`${fieldName} format is invalid`);
                    } else if (field.validity.patternMismatch) {
                        errorMessages.push(`${fieldName} format is incorrect`);
                    } else if (field.validity.tooShort || field.validity.tooLong) {
                        errorMessages.push(`${fieldName} length is invalid`);
                    } else if (field.validity.rangeUnderflow || field.validity.rangeOverflow) {
                        errorMessages.push(`${fieldName} value is out of range`);
                    }
                });
                
                Swal.fire({
                    icon: 'warning',
                    title: 'Validation Required',
                    html: errorMessages.length > 0 
                        ? `<div class="text-left"><strong>Please fix the following:</strong><ul class="mt-2">${errorMessages.map(msg => `<li>${msg}</li>`).join('')}</ul></div>`
                        : 'Please fill in all required fields correctly.',
                    confirmButtonColor: '#007bff',
                    confirmButtonText: 'OK, I\'ll fix them'
                });
                
                form.classList.add('was-validated');
                return false;
            }
            
            // Then run Canadian-specific validation
            if (window.CanadianEmployeeValidation && !window.CanadianEmployeeValidation.validateForm()) {
                form.classList.add('was-validated');
                return false;
            }
            
            // Show enhanced loading message with progress
            Swal.fire({
                title: 'Creating Employee Profile',
                html: `
                    <div class="mb-3">
                        <i class="fas fa-user-plus fa-2x text-primary mb-3"></i>
                        <p class="mb-2">Processing Canadian employment standards...</p>
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 100%"></div>
                        </div>
                    </div>
                `,
                allowOutsideClick: false,
                allowEscapeKey: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
            
            // Submit the form after showing loading with proper form reference
            setTimeout(() => {
                // Remove event listener to prevent infinite loop
                form.removeEventListener('submit', arguments.callee);
                form.submit();
            }, 800);
        });
    </script>
}
