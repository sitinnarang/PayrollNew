@page
@using Microsoft.AspNetCore.Authorization
@using PayrollPro.Employees
@using PayrollPro.Web.Pages.Employees
@model IndexModel
@{
    ViewData["Title"] = "Employee Management";
}

@section styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .employee-header {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
            padding: 2rem;
            border-radius: 15px;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        
        .employee-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .stat-card {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.08);
            border-left: 4px solid #4facfe;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        
        .stat-icon {
            font-size: 2rem;
            color: #4facfe;
            margin-bottom: 0.5rem;
        }
        
        .stat-value {
            font-size: 2rem;
            font-weight: bold;
            color: #2d3748;
            margin-bottom: 0.25rem;
        }
        
        .stat-label {
            color: #718096;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .employees-table-container {
            background: white;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        }
        
        .table-header {
            background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);
            padding: 1.5rem;
            border-bottom: 1px solid #e2e8f0;
        }
        
        .table-header h3 {
            margin: 0;
            color: #2d3748;
            font-weight: 600;
        }
        
        .btn-create-employee {
            background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
            border: none;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
            text-decoration: none;
        }
        
        .btn-create-employee:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(72, 187, 120, 0.4);
            color: white;
        }
        
        .employee-avatar {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 1.1rem;
        }
        
        .employee-status {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 500;
        }
        
        .status-active {
            background: #c6f6d5;
            color: #22543d;
        }
        
        .status-inactive {
            background: #fed7d7;
            color: #742a2a;
        }
        
        .status-onleave {
            background: #fefcbf;
            color: #744210;
        }
        
        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }
        
        .btn-action {
            padding: 0.5rem;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
            color: white;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 35px;
            height: 35px;
        }
        
        .btn-edit {
            background: #4299e1;
        }
        
        .btn-edit:hover {
            background: #3182ce;
            transform: scale(1.1);
        }
        
        .btn-delete {
            background: #f56565;
        }
        
        .btn-delete:hover {
            background: #e53e3e;
            transform: scale(1.1);
        }
        
        .btn-payroll {
            background: #9f7aea;
        }
        
        .btn-payroll:hover {
            background: #805ad5;
            transform: scale(1.1);
        }
        
        .table-responsive {
            border-radius: 0 0 15px 15px;
            overflow: hidden;
        }
        
        .table {
            margin: 0;
        }
        
        .table th {
            background: #f8f9fa;
            border: none;
            padding: 1rem;
            font-weight: 600;
            color: #2d3748;
            border-bottom: 2px solid #e2e8f0;
        }
        
        .table td {
            border: none;
            padding: 1rem;
            vertical-align: middle;
            border-bottom: 1px solid #f1f3f4;
        }
        
        .table tbody tr:hover {
            background: #f8f9ff;
        }
        
        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #718096;
        }
        
        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            color: #cbd5e0;
        }
        
        .filter-container {
            background: white;
            padding: 1.5rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }
        
        .filter-input, .filter-select {
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            padding: 0.75rem 1rem;
            transition: border-color 0.3s ease;
        }
        
        .filter-input:focus, .filter-select:focus {
            border-color: #4facfe;
            box-shadow: 0 0 0 3px rgba(79, 172, 254, 0.1);
        }
        
        .company-badge {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.875rem;
            font-weight: 500;
        }
        
        .salary-amount {
            font-weight: bold;
            color: #2d5a27;
        }
    </style>
}

<div class="employee-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="h2 mb-2">
                <i class="fas fa-users me-3"></i>
                Employee Management
            </h1>
            <p class="mb-0 opacity-75">Manage your workforce and employee information</p>
        </div>
        <a href="/Employees/CreateModal" class="btn-create-employee" data-bs-toggle="modal" data-bs-target="#EmployeeCreateModal">
            <i class="fas fa-user-plus me-2"></i>
            Add New Employee
        </a>
    </div>
</div>

<div class="employee-stats">
    <div class="stat-card">
        <div class="stat-icon">
            <i class="fas fa-users"></i>
        </div>
        <div class="stat-value" id="totalEmployees">@Model.Employees.TotalCount</div>
        <div class="stat-label">Total Employees</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-icon">
            <i class="fas fa-check-circle"></i>
        </div>
        <div class="stat-value" id="activeEmployees">@Model.Employees.Items.Count(e => e.Status == EmployeeStatus.Active)</div>
        <div class="stat-label">Active Employees</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-icon">
            <i class="fas fa-briefcase"></i>
        </div>
        <div class="stat-value" id="departments">@Model.Employees.Items.Select(e => e.Department).Distinct().Count()</div>
        <div class="stat-label">Departments</div>
    </div>
    
    <div class="stat-card">
        <div class="stat-icon">
            <i class="fas fa-dollar-sign"></i>
        </div>
        <div class="stat-value" id="avgSalary">@(Model.Employees.Items.Any() ? $"${Model.Employees.Items.Average(e => e.Salary):N0}" : "$0")</div>
        <div class="stat-label">Avg Salary</div>
    </div>
</div>

<div class="filter-container">
    <div class="row">
        <div class="col-md-4">
            <div class="input-group">
                <span class="input-group-text">
                    <i class="fas fa-search"></i>
                </span>
                <input type="text" class="filter-input" placeholder="Search employees..." id="employeeSearch">
            </div>
        </div>
        <div class="col-md-3">
            <select class="filter-select" id="companyFilter">
                <option value="">All Companies</option>
                @foreach (var company in Model.Companies.Items)
                {
                    <option value="@company.Id">@company.Name</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <select class="filter-select" id="departmentFilter">
                <option value="">All Departments</option>
                @foreach (var dept in Model.Employees.Items.Select(e => e.Department).Distinct().OrderBy(d => d))
                {
                    <option value="@dept">@dept</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <select class="filter-select" id="statusFilter">
                <option value="">All Status</option>
                <option value="Active">Active</option>
                <option value="Inactive">Inactive</option>
                <option value="OnLeave">On Leave</option>
                <option value="Terminated">Terminated</option>
            </select>
        </div>
    </div>
</div>

<div class="employees-table-container">
    <div class="table-header">
        <div class="d-flex justify-content-between align-items-center">
            <h3>Employees List</h3>
            <div class="d-flex gap-2">
                <button class="btn btn-outline-primary btn-sm" onclick="refreshEmployees()">
                    <i class="fas fa-sync me-1"></i> Refresh
                </button>
                <button class="btn btn-outline-success btn-sm" onclick="exportEmployees()">
                    <i class="fas fa-download me-1"></i> Export
                </button>
            </div>
        </div>
    </div>
    
    <div class="table-responsive">
        @if (Model.Employees.Items.Any())
        {
            <table class="table" id="employeesTable">
                <thead>
                    <tr>
                        <th>Employee</th>
                        <th>Company</th>
                        <th>Department</th>
                        <th>Position</th>
                        <th>Salary</th>
                        <th>Hire Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var employee in Model.Employees.Items)
                    {
                        <tr data-company="@employee.CompanyId" data-department="@employee.Department" data-status="@employee.Status">
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="employee-avatar me-3">
                                        @employee.FirstName.Substring(0, 1)@employee.LastName.Substring(0, 1)
                                    </div>
                                    <div>
                                        <div class="fw-bold">@employee.FullName</div>
                                        <small class="text-muted">
                                            <i class="fas fa-envelope me-1"></i>@employee.Email
                                        </small>
                                        @if (!string.IsNullOrEmpty(employee.Phone))
                                        {
                                            <br>
                                            <small class="text-muted">
                                                <i class="fas fa-phone me-1"></i>@employee.Phone
                                            </small>
                                        }
                                    </div>
                                </div>
                            </td>
                            <td>
                                <span class="company-badge">@employee.CompanyName</span>
                                @if (!string.IsNullOrEmpty(employee.CompanyCode))
                                {
                                    <br>
                                    <small class="text-muted">@employee.CompanyCode</small>
                                }
                            </td>
                            <td>
                                <div>
                                    <i class="fas fa-building text-muted me-1"></i>
                                    @employee.Department
                                </div>
                            </td>
                            <td>
                                <div>
                                    <i class="fas fa-user-tie text-muted me-1"></i>
                                    @employee.Position
                                </div>
                            </td>
                            <td>
                                <div class="salary-amount">@employee.FormattedSalary</div>
                            </td>
                            <td>
                                <div>
                                    @employee.HireDate.ToString("MMM dd, yyyy")
                                    <br>
                                    <small class="text-muted">@employee.YearsOfService years</small>
                                </div>
                            </td>
                            <td>
                                @switch (employee.Status)
                                {
                                    case EmployeeStatus.Active:
                                        <span class="employee-status status-active">
                                            <i class="fas fa-check-circle"></i>
                                            Active
                                        </span>
                                        break;
                                    case EmployeeStatus.Inactive:
                                        <span class="employee-status status-inactive">
                                            <i class="fas fa-times-circle"></i>
                                            Inactive
                                        </span>
                                        break;
                                    case EmployeeStatus.OnLeave:
                                        <span class="employee-status status-onleave">
                                            <i class="fas fa-clock"></i>
                                            On Leave
                                        </span>
                                        break;
                                    case EmployeeStatus.Terminated:
                                        <span class="employee-status status-inactive">
                                            <i class="fas fa-ban"></i>
                                            Terminated
                                        </span>
                                        break;
                                }
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <a href="/Payroll/Employee/@employee.Id" class="btn-action btn-payroll" title="View Payroll">
                                        <i class="fas fa-money-bill"></i>
                                    </a>
                                    <a href="/Employees/EditModal/@employee.Id" class="btn-action btn-edit" title="Edit Employee" data-bs-toggle="modal" data-bs-target="#EmployeeEditModal">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button class="btn-action btn-delete" title="Delete Employee" onclick="deleteEmployee('@employee.Id')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-users"></i>
                <h4>No Employees Found</h4>
                <p>Start by adding your first employee to begin workforce management.</p>
                <a href="/Employees/CreateModal" class="btn-create-employee" data-bs-toggle="modal" data-bs-target="#EmployeeCreateModal">
                    <i class="fas fa-user-plus me-2"></i>
                    Add First Employee
                </a>
            </div>
        }
    </div>
</div>

<!-- Employee Create Modal -->
<div class="modal fade" id="EmployeeCreateModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <!-- Content will be loaded here -->
        </div>
    </div>
</div>

<!-- Employee Edit Modal -->
<div class="modal fade" id="EmployeeEditModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <!-- Content will be loaded here -->
        </div>
    </div>
</div>

@section scripts {
    <script src="~/js/simple-theme-switcher.js"></script>
    <script>
        $(function() {
            // Search and filter functionality
            function filterEmployees() {
                var searchTerm = $('#employeeSearch').val().toLowerCase();
                var companyFilter = $('#companyFilter').val();
                var departmentFilter = $('#departmentFilter').val();
                var statusFilter = $('#statusFilter').val();
                
                $('#employeesTable tbody tr').each(function() {
                    var row = $(this);
                    var text = row.text().toLowerCase();
                    var company = row.data('company');
                    var department = row.data('department');
                    var status = row.data('status');
                    
                    var showRow = true;
                    
                    // Search filter
                    if (searchTerm && text.indexOf(searchTerm) === -1) {
                        showRow = false;
                    }
                    
                    // Company filter
                    if (companyFilter && company != companyFilter) {
                        showRow = false;
                    }
                    
                    // Department filter
                    if (departmentFilter && department != departmentFilter) {
                        showRow = false;
                    }
                    
                    // Status filter
                    if (statusFilter && status != statusFilter) {
                        showRow = false;
                    }
                    
                    row.toggle(showRow);
                });
            }
            
            $('#employeeSearch, #companyFilter, #departmentFilter, #statusFilter').on('change keyup', filterEmployees);
            
            // Modal handling
            $('#EmployeeCreateModal, #EmployeeEditModal').on('show.bs.modal', function (e) {
                var url = $(e.relatedTarget).attr('href');
                if (url) {
                    $(this).find('.modal-content').load(url);
                }
            });
            
            // Clear modal content when closed
            $('#EmployeeCreateModal, #EmployeeEditModal').on('hidden.bs.modal', function () {
                $(this).find('.modal-content').empty();
            });
        });
        
        function refreshEmployees() {
            location.reload();
        }
        
        function exportEmployees() {
            // Implement export functionality
            alert('Export functionality will be implemented');
        }
        
        function deleteEmployee(id) {
            if (confirm('Are you sure you want to delete this employee?')) {
                // Implement delete functionality
                alert('Delete functionality will be implemented');
            }
        }
    </script>
}