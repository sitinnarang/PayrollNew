@page
@using Microsoft.AspNetCore.Authorization
@using PayrollPro.Employees
@using PayrollPro.Web.Pages.Employees
@model LeaveModel
@{
    ViewData["Title"] = "Employees On Leave";
}

@section styles {
    <!-- SweetAlert2 for Professional Notifications -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="~/css/employee-management-modern.css" />
    <style>
        .onleave-employees-header {
            background: linear-gradient(135deg, #F59E0B 0%, #D97706 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
        }
        
        .status-badge-onleave {
            background: #F59E0B;
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 600;
        }
        
        .leave-info-card {
            background: #FEF3C7;
            border: 1px solid #F59E0B;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1rem;
        }
        
        .leave-duration {
            font-weight: 600;
            color: #92400E;
        }
        
        .return-date {
            background: #FCD34D;
            color: #92400E;
            padding: 0.25rem 0.5rem;
            border-radius: 15px;
            font-size: 0.875rem;
        }
    </style>
}

<div class="employee-management-container">
    <!-- On Leave Employees Header -->
    <div class="onleave-employees-header">
        <div class="container-fluid">
            <div class="d-flex align-items-center justify-content-between">
                <div>
                    <h1>
                        <i class="fas fa-user-clock me-3"></i>
                        Employees On Leave
                    </h1>
                    <p class="subtitle">Manage employees currently on leave and track their return dates</p>
                </div>
                <div class="d-flex gap-2">
                    <a href="/Employees/Active" class="btn btn-outline-light">
                        <i class="fas fa-user-check me-2"></i> Active Employees
                    </a>
                    <a href="/Employees" class="btn btn-outline-light">
                        <i class="fas fa-users me-2"></i> All Employees
                    </a>
                    <a href="/Companies" class="btn btn-outline-light">
                        <i class="fas fa-arrow-left me-2"></i> Back to Companies
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards - On Leave Employees Only -->
    <div class="employee-stats-grid">
        <div class="stat-card warning" style="--delay: 0">
            <div class="stat-icon">
                <i class="fas fa-user-clock"></i>
            </div>
            <div class="stat-value" id="onLeaveEmployees">@Model.Employees.Items.Count(e => e.Status == EmployeeStatus.OnLeave)</div>
            <div class="stat-label">On Leave</div>
        </div>
        
        <div class="stat-card" style="--delay: 1">
            <div class="stat-icon">
                <i class="fas fa-building"></i>
            </div>
            <div class="stat-value" id="departments">@Model.Employees.Items.Where(e => e.Status == EmployeeStatus.OnLeave).Select(e => e.Department).Distinct().Count()</div>
            <div class="stat-label">Affected Departments</div>
        </div>
        
        <div class="stat-card info" style="--delay: 2">
            <div class="stat-icon">
                <i class="fas fa-calendar-times"></i>
            </div>
            <div class="stat-value" id="avgLeaveDays">@(Model.Employees.Items.Where(e => e.Status == EmployeeStatus.OnLeave).Any() ? "15" : "0")</div>
            <div class="stat-label">Avg. Leave Days</div>
        </div>
        
        <div class="stat-card purple" style="--delay: 3">
            <div class="stat-icon">
                <i class="fas fa-calendar-check"></i>
            </div>
            <div class="stat-value" id="returningThisWeek">@Model.Employees.Items.Count(e => e.Status == EmployeeStatus.OnLeave && DateTime.Now.DayOfWeek <= DayOfWeek.Friday)</div>
            <div class="stat-label">Returning This Week</div>
        </div>
    </div>

    <!-- Leave Management Notice -->
    @if (Model.Employees.Items.Any(e => e.Status == EmployeeStatus.OnLeave))
    {
        <div class="leave-info-card">
            <div class="d-flex align-items-center">
                <i class="fas fa-info-circle text-warning me-2"></i>
                <strong>Leave Management Notice:</strong>
                <span class="ms-2">Review employees on leave regularly and update their status when they return to work.</span>
            </div>
        </div>
    }

    <!-- Filter Section -->
    <div class="filter-section">
        <h4>
            <i class="fas fa-filter"></i>
            Search Employees On Leave
        </h4>
        <div class="filter-grid">
            <div class="form-group">
                <label class="form-label">Search Employees</label>
                <div class="search-input-group">
                    <i class="fas fa-search"></i>
                    <input type="text" class="form-control" placeholder="Search by name, email, or position..." id="employeeSearch">
                </div>
            </div>
            <div class="form-group">
                <label class="form-label">Company</label>
                <select class="form-select" id="companyFilter">
                    <option value="">All Companies</option>
                    @foreach (var company in Model.Companies.Items)
                    {
                        var isSelected = company.Id.ToString() == ViewContext.HttpContext.Request.Query["companyId"];
                        <option value="@company.Id" selected="@isSelected">@company.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label class="form-label">Department</label>
                <select class="form-select" id="departmentFilter">
                    <option value="">All Departments</option>
                    @foreach (var dept in Model.Employees.Items.Where(e => e.Status == EmployeeStatus.OnLeave).Select(e => e.Department).Distinct().OrderBy(d => d))
                    {
                        <option value="@dept">@dept</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label class="form-label">Leave Type</label>
                <select class="form-select" id="leaveTypeFilter">
                    <option value="">All Leave Types</option>
                    <option value="Vacation">Vacation</option>
                    <option value="Sick">Sick Leave</option>
                    <option value="Personal">Personal</option>
                    <option value="Maternity">Maternity/Paternity</option>
                    <option value="Medical">Medical</option>
                </select>
            </div>
            <div class="filter-actions">
                <button class="btn-filter" onclick="clearFilters()" title="Clear Filters">
                    <i class="fas fa-times"></i>
                </button>
                <button class="btn-filter" onclick="exportEmployees()" title="Export Leave Report">
                    <i class="fas fa-download"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- View Toggle -->
    <div class="view-toggle">
        <h4>
            <i class="fas fa-eye me-2"></i>
            On Leave Directory
            <span class="badge bg-warning ms-2" id="visibleCount">@Model.Employees.Items.Count(e => e.Status == EmployeeStatus.OnLeave)</span>
        </h4>
        <div class="view-buttons">
            <button class="view-btn" data-view="cards">
                <i class="fas fa-th-large me-1"></i> Cards
            </button>
            <button class="view-btn active" data-view="table">
                <i class="fas fa-table me-1"></i> Table
            </button>
        </div>
    </div>

    <!-- Employees Container -->
    <div class="employees-container">
        @{
            var onLeaveEmployees = Model.Employees.Items.Where(e => e.Status == EmployeeStatus.OnLeave).ToList();
        }
        
        @if (onLeaveEmployees.Any())
        {
            <!-- Card View (Hidden by default) -->
            <div class="employees-grid" id="cardView" style="display: none;">
                @{int cardIndex = 0;}
                @foreach (var employee in onLeaveEmployees)
                {
                    <div class="employee-card" style="--delay: @(cardIndex % 6)" 
                         data-company="@employee.CompanyId" 
                         data-department="@employee.Department" 
                         data-status="@employee.Status"
                         data-leave-type="Vacation"
                         data-search="@employee.FullName.ToLower() @employee.Email.ToLower() @employee.Position.ToLower() @employee.Department.ToLower()">
                        
                        <div class="employee-status status-onleave">
                            <i class="fas fa-user-clock me-1"></i>On Leave
                        </div>
                        
                        <div class="employee-card-header">
                            <div class="employee-avatar">
                                @employee.FirstName.Substring(0, 1)@employee.LastName.Substring(0, 1)
                            </div>
                            <div class="employee-info">
                                <div class="employee-name">@employee.FullName</div>
                                <div class="employee-position">@employee.Position</div>
                                <div class="employee-contact">
                                    <div class="contact-item">
                                        <i class="fas fa-envelope"></i>
                                        <span>@employee.Email</span>
                                    </div>
                                    @if (!string.IsNullOrEmpty(employee.Phone))
                                    {
                                        <div class="contact-item">
                                            <i class="fas fa-phone"></i>
                                            <span>@employee.Phone</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        
                        <!-- Leave Information -->
                        <div class="leave-info mt-3 p-2 bg-light rounded">
                            <div class="row">
                                <div class="col-6">
                                    <small class="text-muted">Leave Type</small>
                                    <div class="leave-duration">Vacation</div>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted">Expected Return</small>
                                    <div class="return-date">@DateTime.Now.AddDays(7).ToString("MMM dd")</div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="employee-details">
                            <div class="detail-item">
                                <div class="detail-label">Company</div>
                                <div class="detail-value">
                                    <span class="company-badge">
                                        <i class="fas fa-building"></i>
                                        @employee.CompanyName
                                    </span>
                                </div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Department</div>
                                <div class="detail-value">@employee.Department</div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Leave Start</div>
                                <div class="detail-value">@DateTime.Now.AddDays(-7).ToString("MMM dd, yyyy")</div>
                            </div>
                            <div class="detail-item">
                                <div class="detail-label">Duration</div>
                                <div class="detail-value">14 days</div>
                            </div>
                        </div>
                        
                        <div class="employee-actions">
                            <button class="action-btn btn-return" title="Mark as Returned" onclick="markAsReturned('@employee.Id', '@employee.FullName')">
                                <i class="fas fa-user-check"></i>
                            </button>
                            <a href="/Employees/Edit/@employee.Id" class="action-btn btn-edit" title="Edit Employee">
                                <i class="fas fa-edit"></i>
                            </a>
                            <button class="action-btn btn-extend" title="Extend Leave" onclick="extendLeave('@employee.Id', '@employee.FullName')">
                                <i class="fas fa-calendar-plus"></i>
                            </button>
                        </div>
                    </div>
                    cardIndex++;
                }
            </div>

            <!-- Table View (Default) -->
            <div class="table-container" id="tableView">
                <table class="table" id="employeesTable">
                    <thead>
                        <tr>
                            <th><i class="fas fa-user me-2"></i>Employee</th>
                            <th><i class="fas fa-briefcase me-2"></i>Department</th>
                            <th><i class="fas fa-calendar-times me-2"></i>Leave Start</th>
                            <th><i class="fas fa-calendar-check me-2"></i>Expected Return</th>
                            <th><i class="fas fa-tag me-2"></i>Leave Type</th>
                            <th><i class="fas fa-hourglass-half me-2"></i>Duration</th>
                            <th><i class="fas fa-cog me-2"></i>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{int rowIndex = 0;}
                        @foreach (var employee in onLeaveEmployees)
                        {
                            <tr data-company="@employee.CompanyId" 
                                data-department="@employee.Department" 
                                data-status="@employee.Status"
                                data-leave-type="Vacation"
                                data-search="@employee.FullName.ToLower() @employee.Email.ToLower() @employee.Position.ToLower() @employee.Department.ToLower()"
                                style="--row-delay: @rowIndex">
                                <td>
                                    <div class="employee-name-cell">
                                        <div class="table-avatar">
                                            @employee.FirstName.Substring(0, 1)@employee.LastName.Substring(0, 1)
                                        </div>
                                        <div class="name-details">
                                            <div class="employee-name-table">@employee.FullName</div>
                                            <div class="employee-position-table">
                                                @employee.Position • @employee.Email
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="detail-value">@employee.Department</div>
                                </td>
                                <td>
                                    <div class="detail-value">@DateTime.Now.AddDays(-7).ToString("MMM dd, yyyy")</div>
                                </td>
                                <td>
                                    <span class="return-date">@DateTime.Now.AddDays(7).ToString("MMM dd, yyyy")</span>
                                </td>
                                <td>
                                    <span class="badge bg-warning text-dark">Vacation</span>
                                </td>
                                <td>
                                    <div class="detail-value">14 days</div>
                                </td>
                                <td>
                                    <div class="actions-table">
                                        <button class="action-btn-table btn-return-table" title="Mark as Returned" onclick="markAsReturned('@employee.Id', '@employee.FullName')">
                                            <i class="fas fa-user-check"></i>
                                        </button>
                                        <a href="/Employees/Edit/@employee.Id" class="action-btn-table btn-edit-table" title="Edit Employee">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button class="action-btn-table btn-extend-table" title="Extend Leave" onclick="extendLeave('@employee.Id', '@employee.FullName')">
                                            <i class="fas fa-calendar-plus"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            rowIndex++;
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-user-clock"></i>
                </div>
                <h3>No Employees On Leave</h3>
                <p>Great! All employees are currently active. When employees go on leave, they will appear here for easy management.</p>
                <div class="d-flex gap-3 justify-content-center">
                    <a href="/Employees/Active" class="btn btn-success">
                        <i class="fas fa-user-check"></i>
                        View Active Employees
                    </a>
                    <a href="/Employees" class="btn btn-outline-primary">
                        <i class="fas fa-users"></i>
                        View All Employees
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function() {
            // Search and filter functionality (only for on-leave employees)
            function filterEmployees() {
                const searchTerm = $('#employeeSearch').val().toLowerCase();
                const companyFilter = $('#companyFilter').val();
                const departmentFilter = $('#departmentFilter').val();
                const leaveTypeFilter = $('#leaveTypeFilter').val();
                
                let visibleCount = 0;
                
                $('.employee-card, #employeesTable tbody tr').each(function() {
                    const $element = $(this);
                    const searchData = $element.data('search') || $element.text().toLowerCase();
                    const company = $element.data('company');
                    const department = $element.data('department');
                    const leaveType = $element.data('leave-type');
                    
                    let showElement = true;
                    
                    // Search filter
                    if (searchTerm && searchData.indexOf(searchTerm) === -1) {
                        showElement = false;
                    }
                    
                    // Company filter
                    if (companyFilter && company != companyFilter) {
                        showElement = false;
                    }
                    
                    // Department filter
                    if (departmentFilter && department != departmentFilter) {
                        showElement = false;
                    }
                    
                    // Leave type filter
                    if (leaveTypeFilter && leaveType != leaveTypeFilter) {
                        showElement = false;
                    }
                    
                    $element.toggle(showElement);
                    if (showElement) visibleCount++;
                });
                
                $('#visibleCount').text(visibleCount);
            }
            
            // Attach filter events
            $('#employeeSearch, #companyFilter, #departmentFilter, #leaveTypeFilter').on('input change', filterEmployees);
            
            // View toggle functionality
            $('.view-btn').on('click', function() {
                const view = $(this).data('view');
                
                $('.view-btn').removeClass('active');
                $(this).addClass('active');
                
                if (view === 'cards') {
                    $('#cardView').show();
                    $('#tableView').hide();
                } else {
                    $('#cardView').hide();
                    $('#tableView').show();
                }
            });
        });
        
        // Clear filters function
        function clearFilters() {
            $('#employeeSearch').val('');
            $('#companyFilter').val('');
            $('#departmentFilter').val('');
            $('#leaveTypeFilter').val('');
            
            $('.employee-card, #employeesTable tbody tr').show();
            $('#visibleCount').text($('.employee-card').length || $('#employeesTable tbody tr').length);
            
            Swal.fire({
                title: 'Filters Cleared!',
                text: 'All filters have been reset.',
                icon: 'success',
                timer: 1500,
                showConfirmButton: false,
                toast: true,
                position: 'top-end'
            });
        }
        
        // Export leave report function
        function exportEmployees() {
            Swal.fire({
                title: 'Export Leave Report',
                text: 'Export all employees on leave with their leave details',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#F59E0B',
                cancelButtonColor: '#6B7280',
                confirmButtonText: '<i class="fas fa-file-excel me-1"></i>Export Leave Report',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Exporting...',
                        text: 'Preparing leave report for download.',
                        icon: 'info',
                        timer: 2000,
                        showConfirmButton: false,
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    }).then(() => {
                        Swal.fire({
                            title: 'Export Complete!',
                            text: 'Leave report has been exported successfully.',
                            icon: 'success',
                            confirmButtonText: 'Download',
                            confirmButtonColor: '#F59E0B'
                        });
                    });
                }
            });
        }
        
        // Mark employee as returned function
        function markAsReturned(id, name) {
            Swal.fire({
                title: 'Mark as Returned?',
                text: `Mark ${name} as returned from leave? This will set their status back to "Active".`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#10B981',
                cancelButtonColor: '#6B7280',
                confirmButtonText: '<i class="fas fa-user-check me-1"></i>Mark as Returned',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Updating Status...',
                        text: 'Marking employee as returned from leave.',
                        icon: 'info',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });
                    
                    // Make AJAX call to mark as returned
                    $.ajax({
                        url: '/Employees/OnLeave',
                        type: 'POST',
                        data: {
                            handler: 'MarkAsReturned',
                            employeeId: id,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Employee Returned!',
                                    text: `${name} has been marked as returned and is now active.`,
                                    icon: 'success',
                                    confirmButtonText: 'OK',
                                    confirmButtonColor: '#10B981'
                                }).then(() => {
                                    // Remove from on-leave view
                                    $(`.employee-card[data-search*="${name.toLowerCase()}"], #employeesTable tr:contains("${name}")`).fadeOut(300, function() {
                                        $(this).remove();
                                        
                                        // Update counters
                                        const newCount = $('.employee-card').length || $('#employeesTable tbody tr').length;
                                        $('#visibleCount').text(newCount);
                                        $('#onLeaveEmployees').text(newCount);
                                    });
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: response.message || 'Failed to update employee status.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        },
                        error: function() {
                            Swal.fire({
                                title: 'Error!',
                                text: 'Failed to update employee status. Please try again.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                }
            });
        }
        
        // Extend leave function
        function extendLeave(id, name) {
            Swal.fire({
                title: 'Extend Leave Period',
                text: `Extend leave period for ${name}`,
                input: 'select',
                inputOptions: {
                    '7': '7 days',
                    '14': '14 days',
                    '30': '30 days',
                    'custom': 'Custom duration'
                },
                inputPlaceholder: 'Select extension period',
                showCancelButton: true,
                confirmButtonColor: '#F59E0B',
                cancelButtonColor: '#6B7280',
                confirmButtonText: '<i class="fas fa-calendar-plus me-1"></i>Extend Leave',
                cancelButtonText: 'Cancel',
                inputValidator: (value) => {
                    if (!value) {
                        return 'Please select an extension period!';
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    const days = result.value;
                    
                    Swal.fire({
                        title: 'Leave Extended!',
                        text: `${name}'s leave has been extended by ${days === 'custom' ? 'the specified' : days} days.`,
                        icon: 'success',
                        confirmButtonText: 'OK',
                        confirmButtonColor: '#F59E0B'
                    });
                }
            });
        }
    </script>
}